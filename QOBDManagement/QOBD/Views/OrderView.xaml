<UserControl x:Class="QOBD.Views.OrderView"
             Name="Order"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QOBD.Views"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Interfaces="clr-namespace:QOBDViewModels.Interfaces;assembly=QOBDViewModels"
             xmlns:ViewModel="clr-namespace:QOBDViewModels.ViewModel;assembly=QOBDViewModels"
             xmlns:Views="clr-namespace:QOBD.Views"
             xmlns:Main="clr-namespace:QOBD"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="800" Loaded="OrderView_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type ViewModel:OrderSideBarViewModel}">
                <Views:OrderSideBarView/>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Grid.Row="1" x:Name="gvMain" VerticalAlignment="Top" Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Here comes the side menu-->

        <Grid x:Name="gvLeftSide"  Height="{Binding Height, ElementName=gvMain, UpdateSourceTrigger=PropertyChanged}" 
                          VerticalAlignment="Top" HorizontalAlignment="Left">
            <ContentControl Content="{Binding OrderViewModel.OrderSideBarViewModel, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <!-- End -->


        <!-- Here comes the main content of the view -->

        <StackPanel Grid.Column="1"  Height="{Binding Height, ElementName=gvMain, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 0 20">
            
            <Label FontSize="20" Margin="0 20 0 20" Foreground="DarkGray" HorizontalAlignment="Center" Content="{Binding OrderViewModel.Title, UpdateSourceTrigger=PropertyChanged}"/>

            <StackPanel>
                <StackPanel HorizontalAlignment="Center" Margin="0 0 0 20">

                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Width="400">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Width="400">
                            <Grid Margin="0 8 0 0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="Key" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txbOrderID, Path=BorderBrush}" />
                                <TextBox Name="txbOrderID" Grid.Column="1" Text="{Binding OrderViewModel.OrderSearchModel.TxtOrderId, UpdateSourceTrigger=LostFocus, Mode=TwoWay }" materialDesign:HintAssist.Hint="Order/Credit/Quote ID" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="16" Margin="0 16 0 0"/>
                            </Grid>
                            <Grid Margin="0 8 0 0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="Key" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txbBillID, Path=BorderBrush}" />
                                <TextBox Name="txbBillID" Grid.Column="1" Text="{Binding OrderViewModel.OrderSearchModel.TxtBillId, UpdateSourceTrigger=LostFocus, Mode=TwoWay }" materialDesign:HintAssist.Hint="Bill ID" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="16" Margin="0 16 0 0"/>
                            </Grid>
                            <Grid Margin="0 8 0 0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="Key" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txbClientID, Path=BorderBrush}" />
                                <TextBox Name="txbClientID" Grid.Column="1" Text="{Binding OrderViewModel.OrderSearchModel.TxtClientId, UpdateSourceTrigger=LostFocus, Mode=TwoWay }" materialDesign:HintAssist.Hint="Client ID" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="16" Margin="0 16 0 0"/>
                            </Grid>
                            <Grid Margin="0 8 0 0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="Briefcase" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txbCompanyName, Path=BorderBrush}" />
                                <TextBox Name="txbCompanyName" Grid.Column="1" Text="{Binding OrderViewModel.OrderSearchModel.TxtCompanyName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" materialDesign:HintAssist.Hint="Company Name" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="16" Margin="0 16 0 0"/>
                            </Grid>
                            <Grid Margin="0 8 0 0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="Account" VerticalAlignment="Bottom" Foreground="{Binding ElementName=cbxAgent, Path=BorderBrush}" />
                                <ComboBox Name="cbxAgent" Grid.Column="1" ItemsSource="{Binding OrderViewModel.OrderSearchModel.AgentList, UpdateSourceTrigger=PropertyChanged }" SelectedItem="{Binding OrderViewModel.OrderSearchModel.SelectedAgent, UpdateSourceTrigger=PropertyChanged}"
                                  materialDesign:HintAssist.Hint="Agent in charge"  FontSize="16" Margin="0 16 0 0">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding FirstName}"  FontSize="16" Margin="0 16 0 0"/>
                                                <TextBlock Text=" "/>
                                                <TextBlock Text="{Binding LastName}"  FontSize="16" Margin="0 16 0 0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Bottom" Margin="0 0 10 0">Start Date</TextBlock>
                                <Grid Margin="0 8 0 0" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Kind="Calendar" VerticalAlignment="Bottom" Foreground="{Binding ElementName=dpStartDate, Path=BorderBrush}" />
                                    <DatePicker Name="dpStartDate" Grid.Column="1" SelectedDate="{Binding OrderViewModel.OrderSearchModel.TxtStartDate, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" HorizontalAlignment="Left"  FontSize="16" Margin="0 16 0 0" materialDesign:HintAssist.Hint="Start Date" />
                                </Grid>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Bottom" Margin="0 0 10 0">End Date</TextBlock>
                                <Grid Margin="0 8 0 0" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Kind="Calendar" VerticalAlignment="Bottom" Foreground="{Binding ElementName=dpEndDate, Path=BorderBrush}"/>
                                    <DatePicker Name="dpEndDate" Grid.Column="1" SelectedDate="{Binding OrderViewModel.OrderSearchModel.TxtEndDate, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" HorizontalAlignment="Left" FontSize="16" Margin="0 16 0 0" materialDesign:HintAssist.Hint="End Date" />
                                </Grid>
                            </StackPanel>
                            <Grid Margin="0 8 0 0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="Calendar" VerticalAlignment="Bottom" Foreground="{Binding ElementName=cbxStatus, Path=BorderBrush}" />
                                <ComboBox Name="cbxStatus" Grid.Column="1" ItemsSource="{Binding OrderViewModel.OrderSearchModel.StatusList, UpdateSourceTrigger=PropertyChanged }"  SelectedItem="{Binding OrderViewModel.OrderSearchModel.TxtSelectedStatus, UpdateSourceTrigger=LostFocus}" materialDesign:HintAssist.Hint="Order Status" Margin="8 0 0 0"/>
                            </Grid>
                        </StackPanel>
                        <Grid Margin="0 8 0 0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon Kind="ArrowCompress" VerticalAlignment="Bottom" Foreground="{Binding ElementName=ckbxDeepSearch, Path=BorderBrush}" />
                            <CheckBox Name="ckbxDeepSearch" Grid.Column="1" Content="Deep search" IsChecked="{Binding OrderViewModel.OrderSearchModel.IsDeepSearch, UpdateSourceTrigger=PropertyChanged}"  FontSize="16" Margin="0 16 0 0"/>
                        </Grid>
                        <Button Command="{Binding OrderViewModel.SearchCommand}" HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="Magnify"/>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <materialDesign:Card Visibility="{Binding OrderViewModel.BlockSearchResultVisibility, UpdateSourceTrigger=PropertyChanged }">
                    <StackPanel Orientation="Vertical">
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <TextBlock Name="txtSearch" HorizontalAlignment="Center">Search Result</TextBlock>
                        </materialDesign:ColorZone>
                        <DataGrid x:Name="dgSearch" AutoGenerateColumns="False"
                            ItemsSource="{Binding OrderViewModel.OrderModelList, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True"
                            materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8"       
                            CanUserAddRows="False" MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding TxtDate}"/>
                                <DataGridTextColumn Header="CLient" Binding="{Binding CLientModel.TxtCompany}"/>
                                <DataGridTextColumn Header="Agent" Binding="{Binding AgentModel.TxtLastName}"/>
                                <DataGridTemplateColumn Header="Detail">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Command="{Binding DataContext.OrderViewModel.GetCurrentOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding ElementName=dgSearch,Path=CurrentItem}">
                                                <materialDesign:PackIcon Kind="Eye"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding DataContext.OrderViewModel.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                                CommandParameter="{Binding CurrentItem, ElementName=dgOrderWaitValidList}">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </materialDesign:Card>
                <materialDesign:Card Visibility="{Binding OrderViewModel.BlockOrderVisibility, UpdateSourceTrigger=PropertyChanged }">

                    <StackPanel Orientation="Vertical">
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <TextBlock Name="txtBWaitValid" HorizontalAlignment="Center">Orders/Credits Waiting To Be Validate</TextBlock>
                        </materialDesign:ColorZone>
                        <DataGrid x:Name="dgOrderWaitValidList" AutoGenerateColumns="False"
                            ItemsSource="{Binding OrderViewModel.WaitValidOrderList, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True"
                            materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8"       
                            CanUserAddRows="False" MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding TxtDate}"/>
                                <DataGridTextColumn Header="CLient" Binding="{Binding CLientModel.TxtCompany}"/>
                                <DataGridTextColumn Header="Agent" Binding="{Binding AgentModel.TxtLastName}"/>
                                <DataGridTemplateColumn Header="Detail">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Command="{Binding DataContext.OrderViewModel.GetCurrentOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding ElementName=dgOrderWaitValidList,Path=CurrentItem}">
                                                <materialDesign:PackIcon Kind="Eye"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding DataContext.OrderViewModel.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                                CommandParameter="{Binding CurrentItem, ElementName=dgOrderWaitValidList}">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>

                </materialDesign:Card>

                <materialDesign:Card Visibility="{Binding OrderViewModel.BlockOrderVisibility, UpdateSourceTrigger=PropertyChanged }">
                    <StackPanel Orientation="Vertical">
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <TextBlock Name="txtBWaitClientValid" HorizontalAlignment="Center">Orders Waiting to Be validate with CLient</TextBlock>
                        </materialDesign:ColorZone>
                        <DataGrid x:Name="dgOrderWaitValidClientList" AutoGenerateColumns="False"
                                  ItemsSource="{Binding OrderViewModel.WaitValidClientOrderList, UpdateSourceTrigger=PropertyChanged}" 
                                  Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True" 
                                  materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8"  
                                  CanUserAddRows="False" MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding TxtDate}"/>
                                <DataGridTextColumn Header="CLient" Binding="{Binding CLientModel.TxtCompany}"/>
                                <DataGridTextColumn Header="Agent" Binding="{Binding AgentModel.TxtLastName}"/>
                                <DataGridTemplateColumn Header="Select">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Name="cbMove"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Command="{Binding checkBoxCommand}"
                                                CommandParameter="{Binding ElementName=dgOrderWaitValidClientList,Path=CurrentItem}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Detail">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Command="{Binding DataContext.OrderViewModel.GetCurrentOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding ElementName=dgOrderWaitValidClientList,Path=CurrentItem}">
                                                <materialDesign:PackIcon Kind="Eye"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding DataContext.OrderViewModel.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding CurrentItem, ElementName=dgOrderWaitValidClientList}">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>


                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Visibility="{Binding OrderViewModel.BlockOrderVisibility, UpdateSourceTrigger=PropertyChanged }">
                    <StackPanel Orientation="Vertical">
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <TextBlock Name="txtBInProcess" HorizontalAlignment="Center">Orders/Credits validated - In Process</TextBlock>
                        </materialDesign:ColorZone>
                        <DataGrid x:Name="dgOrderInProcessList" AutoGenerateColumns="False"
                                ItemsSource="{Binding OrderViewModel.InProcessOrderList, UpdateSourceTrigger=PropertyChanged}" 
                                Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True" 
                                materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8"   
                                CanUserAddRows="False" MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding TxtDate}"/>
                                <DataGridTextColumn Header="CLient" Binding="{Binding CLientModel.TxtCompany}"/>
                                <DataGridTextColumn Header="Agent" Binding="{Binding AgentModel.TxtLastName}"/>
                                <DataGridTemplateColumn Header="Detail">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                                    Command="{Binding DataContext.OrderViewModel.GetCurrentOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                    CommandParameter="{Binding ElementName=dgOrderInProcessList,Path=CurrentItem}">
                                                <materialDesign:PackIcon Kind="Eye"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding DataContext.OrderViewModel.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding CurrentItem, ElementName=dgOrderInProcessList}">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Visibility="{Binding OrderViewModel.BlockOrderVisibility, UpdateSourceTrigger=PropertyChanged }">
                    <StackPanel Orientation="Vertical">
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <TextBlock Name="txtBWaitPay" HorizontalAlignment="Center">Orders/Credits Delivered - Waiting To Be Pay</TextBlock>
                        </materialDesign:ColorZone>
                        <DataGrid x:Name="dgOrderWaitPayList" AutoGenerateColumns="False"
                                ItemsSource="{Binding OrderViewModel.WaitPayOrderList, UpdateSourceTrigger=PropertyChanged}" 
                                Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True" 
                                materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8"  
                                CanUserAddRows="False"  MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding TxtDate}"/>
                                <DataGridTextColumn Header="CLient" Binding="{Binding CLientModel.TxtCompany}"/>
                                <DataGridTextColumn Header="Agent" Binding="{Binding AgentModel.TxtLastName}"/>
                                <DataGridTemplateColumn Header="Detail">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                                    Command="{Binding DataContext.OrderViewModel.GetCurrentOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                    CommandParameter="{Binding ElementName=dgOrderWaitPayList,Path=CurrentItem}">
                                                <materialDesign:PackIcon Kind="Eye"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Visibility="{Binding OrderViewModel.BlockOrderVisibility, UpdateSourceTrigger=PropertyChanged }">
                    <StackPanel Orientation="Vertical">
                        <materialDesign:ColorZone Mode="PrimaryMid">
                            <TextBlock Name="txtBPayed" HorizontalAlignment="Center">Orders/Credits Closed - Delivered And Payed</TextBlock>
                        </materialDesign:ColorZone>
                        <DataGrid x:Name="dgOrderPayedDeliveredList" AutoGenerateColumns="False"
                                ItemsSource="{Binding OrderViewModel.ClosedOrderList, UpdateSourceTrigger=PropertyChanged}" 
                                materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" 
                                Margin="0 0 8 20" EnableColumnVirtualization="True" EnableRowVirtualization="True"                        
                                CanUserAddRows="False" MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding TxtDate}"/>
                                <DataGridTextColumn Header="CLient" Binding="{Binding CLientModel.TxtCompany}"/>
                                <DataGridTextColumn Header="Agent" Binding="{Binding AgentModel.TxtLastName}"/>
                                <DataGridTemplateColumn Header="Detail">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Command="{Binding DataContext.OrderViewModel.GetCurrentOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding ElementName=dgOrderPayedDeliveredList,Path=CurrentItem}">
                                                <materialDesign:PackIcon Kind="Eye"/>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </materialDesign:Card>
            </StackPanel>
            
        </StackPanel>                   
            
        <!-- End -->

    </Grid>


</UserControl>
