<UserControl x:Class="QOBD.Views.AgentView"
             Name="Agent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QOBD.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ViewModel="clr-namespace:QOBDViewModels.ViewModel;assembly=QOBDViewModels"
             xmlns:Interfaces="clr-namespace:QOBDViewModels.Interfaces;assembly=QOBDViewModels"
             xmlns:Classes="clr-namespace:QOBDModels.Classes;assembly=QOBDModels"
             xmlns:Views="clr-namespace:QOBD.Views"
             xmlns:Main="clr-namespace:QOBD"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="700" Loaded="AgentView_Loaded">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type ViewModel:AgentSideBarViewModel}">
            <Views:AgentSideBarView/>
        </DataTemplate>
        <Classes:TriggerConverter x:Key="TriggerConverter"/>
    </UserControl.Resources>

    <Grid Grid.Row="1" x:Name="gvMain" VerticalAlignment="Top" Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Here comes the side menu-->

        <Grid x:Name="gvLeftSide"  Height="{Binding Height, ElementName=gvMain, UpdateSourceTrigger=PropertyChanged}" 
                          VerticalAlignment="Top" HorizontalAlignment="Left">
            <ContentControl Content="{Binding AgentViewModel.AgentSideBarViewModel, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <!-- End -->


        <!-- Here comes the main content of the view -->

        <StackPanel Grid.Column="1"  Height="{Binding Height, ElementName=gvMain, UpdateSourceTrigger=PropertyChanged}">

            <Label Margin="0 20 0 20" Name="txtBTitle" FontSize="20" Foreground="DarkGray" HorizontalAlignment="Center" Content="{Binding AgentViewModel.Title, UpdateSourceTrigger=PropertyChanged}"/>

            <StackPanel Margin="0 0 0 20">
                <materialDesign:ColorZone Mode="PrimaryMid">
                    <TextBlock Name="txtBAgent" HorizontalAlignment="Center">Agent List</TextBlock>
                </materialDesign:ColorZone>
                <DataGrid x:Name="dgAgentList" AutoGenerateColumns="False" MaxWidth="{Binding TxtWidthDataList, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding AgentViewModel.ActiveAgentModelList, UpdateSourceTrigger=PropertyChanged}" 
                        Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True" CanUserAddRows="False" MaxHeight="{Binding TxtHeightDataList, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Select">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--  Checked="cbMove_Checked"-->
                                    <CheckBox Name="cbMove"
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"
                                                  Command="{Binding DataContext.AgentViewModel.CheckBoxCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                  CommandParameter="{Binding ElementName=dgAgentList,Path=CurrentItem}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                        <DataGridTextColumn Header="First Name" Binding="{Binding TxtFirstName}"/>
                        <DataGridTextColumn Header="LastName" Binding="{Binding TxtLastName}"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding TxtStatus}"/>
                        <DataGridTextColumn Header="Phone" Binding="{Binding TxtPhone}"/>
                        <DataGridTextColumn Header="Fax" Binding="{Binding TxtFax}"/>
                        <DataGridTextColumn Header="Email" Binding="{Binding TxtEmail}"/>
                        <DataGridTextColumn Header="Login" Binding="{Binding TxtLogin}"/>
                        <!--DataGridTextColumn Header="Role" Binding="{Binding TxtEmail}"/-->

                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--  Checked="cbMove_Checked"-->
                                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  CommandParameter="{Binding ElementName=dgAgentList,Path=CurrentItem}">
                                        <Button.Command>
                                            <MultiBinding Converter="{StaticResource TriggerConverter}">
                                                <Binding Path="DataContext.AgentViewModel.GetCurrentAgentCommand" ElementName="dgAgentList"/>
                                                <Binding />
                                            </MultiBinding>
                                        </Button.Command>
                                        <materialDesign:PackIcon Kind="Eye"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <materialDesign:ColorZone Mode="PrimaryMid">
                    <TextBlock  Name="txtBUnactifAgent" HorizontalAlignment="Center">Deactivated agents</TextBlock>
                </materialDesign:ColorZone>
                <DataGrid x:Name="dgDeactivatedAgent" AutoGenerateColumns="False"
                        ItemsSource="{Binding AgentViewModel.DeactivatedAgentModelList, UpdateSourceTrigger=PropertyChanged}" 
                        Margin="0 0 8 0" EnableColumnVirtualization="True" EnableRowVirtualization="True" CanUserAddRows="False" MaxHeight="300" MaxWidth="985"
                        ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Select">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--  Checked="cbMove_Checked"-->
                                    <CheckBox Name="cbMove"
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Command="{Binding DataContext.AgentViewModel.CheckBoxCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding ElementName=dgDeactivatedAgent,Path=CurrentItem}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="ID" Binding="{Binding TxtID}"/>
                        <DataGridTextColumn Header="First Name" Binding="{Binding TxtFirstName}"/>
                        <DataGridTextColumn Header="LastName" Binding="{Binding TxtLastName}"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding TxtStatus}"/>
                        <DataGridTextColumn Header="Phone" Binding="{Binding TxtPhone}"/>
                        <DataGridTextColumn Header="Fax" Binding="{Binding TxtFax}"/>
                        <DataGridTextColumn Header="Email" Binding="{Binding TxtEmail}"/>
                        <DataGridTextColumn Header="Login" Binding="{Binding TxtLogin}"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--  Checked="cbMove_Checked"-->
                                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Name="btnDetail" ToolTip="See Details"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  CommandParameter="{Binding ElementName=dgDeactivatedAgent,Path=CurrentItem}">
                                        <Button.Command>
                                            <MultiBinding Converter="{StaticResource TriggerConverter}">
                                                <Binding Path="DataContext.AgentViewModel.GetCurrentAgentCommand" ElementName="dgDeactivatedAgent"/>
                                                <Binding />
                                            </MultiBinding>
                                        </Button.Command>
                                        <materialDesign:PackIcon Kind="Eye"/>
                                    </Button>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <materialDesign:ColorZone Mode="PrimaryMid">
                    <TextBlock Name="txtBMoveAgentClient" HorizontalAlignment="Center">Move CLients</TextBlock>
                </materialDesign:ColorZone>
                <StackPanel Orientation="Horizontal" Margin="0 5 0 5"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center">
                    <TextBlock VerticalAlignment="Center" Margin="8 0 0 0">Move All Clients To</TextBlock>
                    <ComboBox Name="comboBxToAgent" Width="250" ItemsSource="{Binding AgentViewModel.AgentModelList}" Margin="8 0 0 0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:ColorZone Mode="Accent">
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{Binding TxtLastName}" Width="16" Height="16" Margin="0 2 5 2"/>
                                        <TextBlock Text="{Binding TxtLastName}"/>
                                    </StackPanel>
                                </materialDesign:ColorZone>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Name="btnMoveClient" Margin="8 0 0 0"  Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                                Command="{Binding AgentViewModel.ClientMoveCommand}"
                                CommandParameter="{Binding ElementName=comboBxToAgent, Path=SelectedItem}">
                        <materialDesign:PackIcon Kind="Check"/>
                    </Button>
                </StackPanel>
            </StackPanel>

        </StackPanel>
            

        <!-- End -->

    </Grid>

</UserControl>
